#!/bin/bash

CATEGORY=dev-util
PN=gplex-dbremner
PV=1.2.2_p2015112101

DISTDIR=/var/calculate/remote/distfiles
FILESDIR=/var/lib/tarball-scripts/ArsenShnurkov/shnurise-tarballs-automation/${CATEGORY}/${PN}/files
WORKDIR=/var/tmp/tarballs/dotnet/${CATEGORY}/${PN}

EGIT_REPO_URI=https://github.com/dbremner/gplex.git
EGIT_COMMIT=594729523b5d208c16202fa1870567069034ca32

S="${WORKDIR}/${PN}-${EGIT_COMMIT}"


die() {
    echo died
    pwd
    exit 1
}

###


echo CHECKPOINT [F.1] Fetching "${EGIT_REPO_URI}" repository

if [ ! -d "${WORKDIR}" ]; then
    mkdir -p "${WORKDIR}" || die
    cd "${WORKDIR}" || die
    git clone "${EGIT_REPO_URI}" "${WORKDIR}" || die
else
    cd "${WORKDIR}" || die
    git fetch origin || die
fi


echo CHECKPOINT [F.2] Fetching binary tools for creating generated source files

if [ ! -f "${WORKDIR}/yacclextools.0.2.2.nupkg" ]; then
    wget -c https://api.nuget.org/packages/yacclextools.0.2.2.nupkg -O "${WORKDIR}/yacclextools.0.2.2.nupkg" || die
else
    echo "tools was already downloaded" || die
fi

if [ ! -d "${WORKDIR}/yacclextools" ]; then
    unzip -u "${WORKDIR}/yacclextools.0.2.2.nupkg" -d "${WORKDIR}/yacclextools" || die
else
    echo "tools are already unpacked" || die
fi


###


echo CHECKPOINT [C] Checking out "${EGIT_COMMIT}"

git reset --hard ${EGIT_COMMIT} || die

if [ -f "${WORKDIR}/.gitmodules" ]; then
    echo CHECKPOINT [M] Checking out submodules from "${WORKDIR}/.gitmodules"
    git submodule update --init --recursive || die
fi

###


# https://git-scm.com/docs/git-checkout-index
# Copy files from the index to the final tree
git checkout-index -a -f --prefix="${S}/" || die


cd "SpecFiles" || die
/usr/bin/mcs -r:System.dll -R:System.Windows.Forms.dll GenerateResource.cs || die
/usr/bin/mono --debug GenerateResource.exe || die
mv Content.resx "${S}/IncludeResources" || die
rm GenerateResource.exe || die

/usr/bin/mono --debug "${WORKDIR}/yacclextools/tools/gppg.exe" /gplex /nolines "gplex.y" || die
mv Parser.cs "${S}/GPLEX/parser.cs" || die

/usr/bin/mono --debug "${WORKDIR}/yacclextools/tools/gplex.exe" gplex.lex || die
mv Scanner.cs "${S}/GPLEX/Scanner.cs" || die

if [ -f GplexBuffers.cs ]; then
    mv GplexBuffers.cs "${S}/GPLEX/GplexBuffers.cs" || die
fi

cd - || die

###

PKGDIR=/var/tmp/aaa
DISTFILES_PULL_URI=https://github.com/ArsenShnurkov/shnurise-tarballs.git
DISTFILES_PUSH_URI=https://${GITHUB_API_TOKEN}@github.com/ArsenShnurkov/shnurise-tarballs.git

BRANCH_NAME=temporary-branch-name124
TAG_NAME=${CATEGORY}/${PN}/${PN}-${PV}
/usr/libexec/git-core/git-check-ref-format ${TAG_NAME} || die

if [ ! -d "${PKGDIR}" ]; then
    mkdir -p "${PKGDIR}"
    cd "${PKGDIR}" || die
    git clone -b master --single-branch "${DISTFILES_PULL_URI}" shnurise-tarballs.git || die
    cd shnurise-tarballs.git || die
    git remote set-url --push origin "${DISTFILES_PUSH_URI}" || die
    git clone "${DISTFILES_PULL_URI}" "${PKGDIR}" || die
else
    cd "${PKGDIR}/shnurise-tarballs.git" || die
    git fetch origin || die
fi
git checkout --force master || die
git checkout --orphan "${BRANCH_NAME}" || git reset --hard "${BRANCH_NAME}" || die

if [ -f * ] || [ -d * ]; then
    git rm -rf --cached *
    rm -rf -f *
fi
if [ -f .gitignore ]; then
    git rm -f .gitignore
    rm -f .gitignore
fi
if [ -f .gitattributes ]; then
    git rm -f .gitattributes
    rm -f .gitattributes
fi

cp --copy-contents -rf "${S}/" --no-target-directory . || die

git add --all --force * || die
git commit -m "commited by ${PN}-${PV}.eroll script" || die
git tag --force "${TAG_NAME}" || die
git push --force origin "${TAG_NAME}" || die
git checkout --force master || die
git branch -D "${BRANCH_NAME}" || die

cd "${S}" || die
echo CHECKPOINT [P] Converting "`pwd`" directory into archive

echo https://github.com/ArsenShnurkov/shnurise-tarballs/archive/${CATEGORY}/${PN}/${PN}-${PV}.tar.gz
